server:
  port: 8082

spring:
  application:
    name: notifications

  kafka:
    bootstrap-servers: ${KAFKA_BROKER:localhost:9092}
    topic:
      notification: notification
      email: email
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
#    properties:
#      security.protocol: ${KAFKA_SECURITY_PROTOCOL}
#      sasl.mechanism: ${KAFKA_MECHANISM}
#      sasl.jaas.config: ${KAFKA_MECHANISM_CONFIG}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:notifications-hotmart}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/oauth2/jwks
      client:
        registration:
          account-hotmart:
            provider: ${PROVIDER_NAME}
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            authorization-grant-type: ${AUTHORIZATION_GRANT_TYPE}
            scope: ${SCOPE}
            client-name: ${CLIENT_NAME}
        provider:
          hotmart:
            issuer-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}


  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


logging:
  level:
    org:
      apache:
        kafka: OFF